{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "candidate_id",
          "type": "uint256"
        }
      ],
      "name": "CandidateNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "candidate_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        }
      ],
      "name": "addEligibleVoters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "candidate_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "voter_email",
          "type": "string"
        }
      ],
      "name": "addVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "candidateID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "org_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "start_time",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eligibleVoters",
      "outputs": [
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getCandidateID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "candidate_id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "poll_id",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "candidate_id",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "polls",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "organizationName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf551a7e66df93992ec72c0853f365d412fbf911d16dd810ff6d76b02cae9b49e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1408780",
    "logsBloom": "0x
    "blockHash": "0xf25b2a58c340d94b8f36e4ce76dc54badf989c566d7c2d873659eede7eaa2baf",
    "transactionHash": "0xf551a7e66df93992ec72c0853f365d412fbf911d16dd810ff6d76b02cae9b49e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1408780",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "09d8f757059340f57b39c57520a5dfc9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidate_id\",\"type\":\"uint256\"}],\"name\":\"CandidateNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"candidate_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"addEligibleVoters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"candidate_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"voter_email\",\"type\":\"string\"}],\"name\":\"addVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"candidateID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"org_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eligibleVoters\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getCandidateID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"candidate_id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"poll_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"candidate_id\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"polls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organizationName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPoll(string,string,uint256,uint256)\":{\"notice\":\"1. Creation of a poll by an organization. 2. Ability to add eligible participants. 3. Adding candidates in the poll. 4. Allowing voters to vote, if they have not done so, and withing the time constraints. 5. After the end time, remove the poll from the list. 6. Allow view live vote count. 7. View the candidates' id.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.17;\\n\\nerror CandidateNotFound (\\n    uint256 candidate_id\\n);\\n\\ncontract Voting {\\n    struct Voter {\\n        string email;\\n        string name;\\n        bool hasVoted;\\n    }\\n    struct Candidate {\\n        string name;\\n        string email;\\n        uint256 candidateID;\\n        uint256 votes;\\n    }\\n    struct Poll {\\n        string id;\\n        string organizationName;\\n        uint256 startTime;\\n        uint256 duration;\\n    }\\n\\n    mapping(string => Poll) public polls;\\n    mapping(string => Candidate[]) public candidates;\\n    mapping(string => Voter[]) public eligibleVoters;\\n\\n    /**\\n    1. Creation of a poll by an organization.\\n    2. Ability to add eligible participants.\\n    3. Adding candidates in the poll.\\n    4. Allowing voters to vote, if they have not done so, and withing the time constraints.\\n    5. After the end time, remove the poll from the list.\\n    6. Allow view live vote count.\\n    7. View the candidates' id.\\n    */\\n    \\n    function createPoll (\\n        string memory poll_id, \\n        string memory org_name,\\n        uint256 start_time,\\n        uint256 duration\\n    ) public {\\n        Poll memory p;\\n        p.id = poll_id;\\n        p.organizationName = org_name;\\n        p.startTime = start_time;\\n        p.duration = duration;\\n        polls[poll_id] = p;\\n    }\\n\\n\\n    function addEligibleVoters(\\n        string memory poll_id,\\n        string memory name,\\n        string memory email\\n    ) public {\\n\\n        Voter memory v;\\n        v.name = name;\\n        v.email = email;\\n        v.hasVoted = false;\\n\\n        eligibleVoters[poll_id].push(v);\\n    }\\n\\n\\n    function addCandidate(\\n        string memory poll_id,\\n        string memory name,\\n        uint256 candidate_id,\\n        string memory email\\n    ) public {\\n        \\n        /**\\n        Need toCheck if the poll id is valid.\\n        */\\n        Candidate memory c;\\n        c.name = name;\\n        c.candidateID = candidate_id;\\n        c.email = email;\\n        c.votes = 0;\\n\\n        candidates[poll_id].push(c);\\n    }\\n\\n\\n    function addVote(\\n        string memory poll_id,\\n        uint256 candidate_id,\\n        string memory voter_email\\n    ) public {\\n        \\n        uint256 n = candidates[poll_id].length;\\n        bool candidateFound = false;\\n\\n        for(uint256 i = 0 ;i < n;i++) {\\n\\n            if(candidates[poll_id][i].candidateID == candidate_id) {\\n                candidateFound = true;\\n                uint256 m = eligibleVoters[poll_id].length;\\n                \\n\\n                for(uint256 j = 0;j < m;j++) {\\n                    Voter memory v = eligibleVoters[poll_id][i];\\n\\n                    /**\\n                    Comparing hash of the strings as string comparision is not available in solidity.\\n                    */\\n\\n                    if(keccak256(abi.encodePacked(voter_email)) == keccak256(abi.encodePacked(v.email))){\\n                        \\n                        /**\\n                        Allow the candidate to vote if he has not voted before.\\n                        */\\n\\n                        bool b = eligibleVoters[poll_id][j].hasVoted;\\n                        if(!b) {\\n                            candidates[poll_id][i].votes++;\\n                            eligibleVoters[poll_id][j].hasVoted = true;\\n                        }\\n                        break;\\n                    }\\n                }\\n                break;\\n            }\\n        }\\n        if(!candidateFound) {\\n            revert CandidateNotFound(\\n                candidate_id\\n            );\\n        }\\n    }\\n\\n\\n    function getVotes(\\n        string memory poll_id,\\n        uint256 candidate_id\\n    ) public view returns(uint256) {\\n        uint256 n = candidates[poll_id].length;\\n        uint256 votes = 0;\\n\\n        bool candidateFound = false;\\n        for(uint256 i = 0;i < n;i++) {\\n            if(candidates[poll_id][i].candidateID == candidate_id) {\\n                votes = candidates[poll_id][i].votes;\\n                candidateFound = true;\\n                break;\\n            }\\n        }\\n\\n        if(!candidateFound) {\\n            revert CandidateNotFound(\\n                candidate_id\\n            );\\n        }\\n        return votes;\\n    }\\n\\n    function getCandidateID(\\n        string memory poll_id,\\n        uint256 index\\n        \\n    ) public view returns(uint256 candidate_id) {\\n        \\n        return candidates[poll_id][index].candidateID;\\n    }\\n\\n    function deletePoll(\\n        string memory poll_id\\n    ) private {\\n        require(block.timestamp - polls[poll_id].startTime > polls[poll_id].duration);\\n        delete polls[poll_id];\\n        delete candidates[poll_id];\\n        delete eligibleVoters[poll_id];\\n    }\\n\\n}\",\"keccak256\":\"0x6365b4642b42925f47ebceb9abf10a4dc5f4316e959a6e50afd1b7cbe69ada44\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611891806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638058316a116100665780638058316a1461011e57806398343d1d14610151578063b85dac4314610181578063c286d923146101b1578063eb309f65146101cd57610093565b806304351b8a1461009857806306aceddc146100ca57806332fbe4c3146100e657806370789e5c14610102575b600080fd5b6100b260048036038101906100ad9190610ff7565b610200565b6040516100c1939291906110ed565b60405180910390f35b6100e460048036038101906100df9190611132565b61037a565b005b61010060048036038101906100fb91906111d1565b610411565b005b61011c60048036038101906101179190611278565b6104d8565b005b61013860048036038101906101339190611303565b6108f3565b604051610148949392919061135b565b60405180910390f35b61016b60048036038101906101669190610ff7565b610a49565b60405161017891906113ae565b60405180910390f35b61019b60048036038101906101969190610ff7565b610b75565b6040516101a891906113ae565b60405180910390f35b6101cb60048036038101906101c691906113c9565b610bc1565b005b6101e760048036038101906101e29190610ff7565b610c81565b6040516101f7949392919061135b565b60405180910390f35b600282805160208101820180518482526020830160208501208183528095505050505050818154811061023257600080fd5b906000526020600020906003020160009150915050806000018054610256906114b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610282906114b3565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b5050505050908060010180546102e4906114b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610310906114b3565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b610382610df4565b8481600001819052508381602001819052508281604001818152505081816060018181525050806000866040516103b99190611520565b908152602001604051809103902060008201518160000190816103dc91906116e3565b5060208201518160010190816103f291906116e3565b5060408201518160020155606082015181600301559050505050505050565b610419610e1c565b828160200181905250818160000181905250600081604001901515908115158152505060028460405161044c9190611520565b9081526020016040518091039020819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908161049991906116e3565b5060208201518160010190816104af91906116e3565b5060408201518160020160006101000a81548160ff021916908315150217905550505050505050565b60006001846040516104ea9190611520565b90815260200160405180910390208054905090506000805b828110156108a9578460018760405161051b9190611520565b9081526020016040518091039020828154811061053b5761053a6117b5565b5b90600052602060002090600402016002015403610896576001915060006002876040516105689190611520565b908152602001604051809103902080549050905060005b8181101561088f5760006002896040516105999190611520565b908152602001604051809103902084815481106105b9576105b86117b5565b5b90600052602060002090600302016040518060600160405290816000820180546105e2906114b3565b80601f016020809104026020016040519081016040528092919081815260200182805461060e906114b3565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b50505050508152602001600182018054610674906114b3565b80601f01602080910402602001604051908101604052809291908181526020018280546106a0906114b3565b80156106ed5780601f106106c2576101008083540402835291602001916106ed565b820191906000526020600020905b8154815290600101906020018083116106d057829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050905080600001516040516020016107289190611520565b604051602081830303815290604052805190602001208760405160200161074f9190611520565b604051602081830303815290604052805190602001200361087b57600060028a60405161077c9190611520565b9081526020016040518091039020838154811061079c5761079b6117b5565b5b906000526020600020906003020160020160009054906101000a900460ff169050806108745760018a6040516107d29190611520565b908152602001604051809103902085815481106107f2576107f16117b5565b5b9060005260206000209060040201600301600081548092919061081490611813565b9190505550600160028b60405161082b9190611520565b9081526020016040518091039020848154811061084b5761084a6117b5565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505b505061088f565b50808061088790611813565b91505061057f565b50506108a9565b80806108a190611813565b915050610502565b50806108ec57836040517f66ad99320000000000000000000000000000000000000000000000000000000081526004016108e391906113ae565b60405180910390fd5b5050505050565b60008180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461092c906114b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610958906114b3565b80156109a55780601f1061097a576101008083540402835291602001916109a5565b820191906000526020600020905b81548152906001019060200180831161098857829003601f168201915b5050505050908060010180546109ba906114b3565b80601f01602080910402602001604051908101604052809291908181526020018280546109e6906114b3565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b5050505050908060020154908060030154905084565b600080600184604051610a5c9190611520565b908152602001604051809103902080549050905060008060005b83811015610b265785600188604051610a8f9190611520565b90815260200160405180910390208281548110610aaf57610aae6117b5565b5b90600052602060002090600402016002015403610b1357600187604051610ad69190611520565b90815260200160405180910390208181548110610af657610af56117b5565b5b906000526020600020906004020160030154925060019150610b26565b8080610b1e90611813565b915050610a76565b5080610b6957846040517f66ad9932000000000000000000000000000000000000000000000000000000008152600401610b6091906113ae565b60405180910390fd5b81935050505092915050565b6000600183604051610b879190611520565b90815260200160405180910390208281548110610ba757610ba66117b5565b5b906000526020600020906004020160020154905092915050565b610bc9610e3f565b838160000181905250828160400181815250508181602001819052506000816060018181525050600185604051610c009190611520565b90815260200160405180910390208190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019081610c4d91906116e3565b506020820151816001019081610c6391906116e3565b50604082015181600201556060820151816003015550505050505050565b6001828051602081018201805184825260208301602085012081835280955050505050508181548110610cb357600080fd5b906000526020600020906004020160009150915050806000018054610cd7906114b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d03906114b3565b8015610d505780601f10610d2557610100808354040283529160200191610d50565b820191906000526020600020905b815481529060010190602001808311610d3357829003601f168201915b505050505090806001018054610d65906114b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d91906114b3565b8015610dde5780601f10610db357610100808354040283529160200191610dde565b820191906000526020600020905b815481529060010190602001808311610dc157829003601f168201915b5050505050908060020154908060030154905084565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b604051806060016040528060608152602001606081526020016000151581525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ece82610e85565b810181811067ffffffffffffffff82111715610eed57610eec610e96565b5b80604052505050565b6000610f00610e67565b9050610f0c8282610ec5565b919050565b600067ffffffffffffffff821115610f2c57610f2b610e96565b5b610f3582610e85565b9050602081019050919050565b82818337600083830152505050565b6000610f64610f5f84610f11565b610ef6565b905082815260208101848484011115610f8057610f7f610e80565b5b610f8b848285610f42565b509392505050565b600082601f830112610fa857610fa7610e7b565b5b8135610fb8848260208601610f51565b91505092915050565b6000819050919050565b610fd481610fc1565b8114610fdf57600080fd5b50565b600081359050610ff181610fcb565b92915050565b6000806040838503121561100e5761100d610e71565b5b600083013567ffffffffffffffff81111561102c5761102b610e76565b5b61103885828601610f93565b925050602061104985828601610fe2565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561108d578082015181840152602081019050611072565b60008484015250505050565b60006110a482611053565b6110ae818561105e565b93506110be81856020860161106f565b6110c781610e85565b840191505092915050565b60008115159050919050565b6110e7816110d2565b82525050565b600060608201905081810360008301526111078186611099565b9050818103602083015261111b8185611099565b905061112a60408301846110de565b949350505050565b6000806000806080858703121561114c5761114b610e71565b5b600085013567ffffffffffffffff81111561116a57611169610e76565b5b61117687828801610f93565b945050602085013567ffffffffffffffff81111561119757611196610e76565b5b6111a387828801610f93565b93505060406111b487828801610fe2565b92505060606111c587828801610fe2565b91505092959194509250565b6000806000606084860312156111ea576111e9610e71565b5b600084013567ffffffffffffffff81111561120857611207610e76565b5b61121486828701610f93565b935050602084013567ffffffffffffffff81111561123557611234610e76565b5b61124186828701610f93565b925050604084013567ffffffffffffffff81111561126257611261610e76565b5b61126e86828701610f93565b9150509250925092565b60008060006060848603121561129157611290610e71565b5b600084013567ffffffffffffffff8111156112af576112ae610e76565b5b6112bb86828701610f93565b93505060206112cc86828701610fe2565b925050604084013567ffffffffffffffff8111156112ed576112ec610e76565b5b6112f986828701610f93565b9150509250925092565b60006020828403121561131957611318610e71565b5b600082013567ffffffffffffffff81111561133757611336610e76565b5b61134384828501610f93565b91505092915050565b61135581610fc1565b82525050565b600060808201905081810360008301526113758187611099565b905081810360208301526113898186611099565b9050611398604083018561134c565b6113a5606083018461134c565b95945050505050565b60006020820190506113c3600083018461134c565b92915050565b600080600080608085870312156113e3576113e2610e71565b5b600085013567ffffffffffffffff81111561140157611400610e76565b5b61140d87828801610f93565b945050602085013567ffffffffffffffff81111561142e5761142d610e76565b5b61143a87828801610f93565b935050604061144b87828801610fe2565b925050606085013567ffffffffffffffff81111561146c5761146b610e76565b5b61147887828801610f93565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114cb57607f821691505b6020821081036114de576114dd611484565b5b50919050565b600081905092915050565b60006114fa82611053565b61150481856114e4565b935061151481856020860161106f565b80840191505092915050565b600061152c82846114ef565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261155c565b6115a3868361155c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115e06115db6115d684610fc1565b6115bb565b610fc1565b9050919050565b6000819050919050565b6115fa836115c5565b61160e611606826115e7565b848454611569565b825550505050565b600090565b611623611616565b61162e8184846115f1565b505050565b5b818110156116525761164760008261161b565b600181019050611634565b5050565b601f8211156116975761166881611537565b6116718461154c565b81016020851015611680578190505b61169461168c8561154c565b830182611633565b50505b505050565b600082821c905092915050565b60006116ba6000198460080261169c565b1980831691505092915050565b60006116d383836116a9565b9150826002028217905092915050565b6116ec82611053565b67ffffffffffffffff81111561170557611704610e96565b5b61170f82546114b3565b61171a828285611656565b600060209050601f83116001811461174d576000841561173b578287015190505b61174585826116c7565b8655506117ad565b601f19841661175b86611537565b60005b828110156117835784890151825560018201915060208501945060208101905061175e565b868310156117a0578489015161179c601f8916826116a9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061181e82610fc1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118505761184f6117e4565b5b60018201905091905056fea264697066735822122084ea5370adedd8dc7205bab1180ac44bef236022028046361baa502db1537cc064736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createPoll(string,string,uint256,uint256)": {
        "notice": "1. Creation of a poll by an organization. 2. Ability to add eligible participants. 3. Adding candidates in the poll. 4. Allowing voters to vote, if they have not done so, and withing the time constraints. 5. After the end time, remove the poll from the list. 6. Allow view live vote count. 7. View the candidates' id."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 35,
        "contract": "contracts/Voting.sol:Voting",
        "label": "polls",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Poll)30_storage)"
      },
      {
        "astId": 41,
        "contract": "contracts/Voting.sol:Voting",
        "label": "candidates",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Candidate)21_storage)dyn_storage)"
      },
      {
        "astId": 47,
        "contract": "contracts/Voting.sol:Voting",
        "label": "eligibleVoters",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(Voter)12_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_array(t_struct(Candidate)21_storage)dyn_storage": {
        "base": "t_struct(Candidate)21_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Candidate[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Voter)12_storage)dyn_storage": {
        "base": "t_struct(Voter)12_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Voter[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(Candidate)21_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Voting.Candidate[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Candidate)21_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(Voter)12_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Voting.Voter[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Voter)12_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Poll)30_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Voting.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)30_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Candidate)21_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Candidate",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/Voting.sol:Voting",
            "label": "email",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/Voting.sol:Voting",
            "label": "candidateID",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 20,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Poll)30_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Poll",
        "members": [
          {
            "astId": 23,
            "contract": "contracts/Voting.sol:Voting",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 25,
            "contract": "contracts/Voting.sol:Voting",
            "label": "organizationName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/Voting.sol:Voting",
            "label": "startTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 29,
            "contract": "contracts/Voting.sol:Voting",
            "label": "duration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Voter)12_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Voter",
        "members": [
          {
            "astId": 7,
            "contract": "contracts/Voting.sol:Voting",
            "label": "email",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/Voting.sol:Voting",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/Voting.sol:Voting",
            "label": "hasVoted",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}